name: Deploy to Fly.io

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint || true
      
      - name: Run tests
        run: npm test || true

  scout-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME || 'murr2k' }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            murr2k/docker-demo-showcase:latest
            murr2k/docker-demo-showcase:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Docker Scout CVEs
        uses: docker/scout-action@v1
        with:
          command: cves
          image: murr2k/docker-demo-showcase:${{ github.sha }}
          only-severities: critical,high
          exit-code: false

  deploy:
    runs-on: ubuntu-latest
    needs: [test, scout-scan]
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Fly.io Token
        run: |
          if [ -z "${{ secrets.FLY_API_TOKEN }}" ]; then
            echo "::error::FLY_API_TOKEN secret is not set. Please add it to your repository secrets."
            echo "To get your Fly.io token, run: fly auth token"
            exit 1
          fi
      
      - name: Setup Fly.io
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}